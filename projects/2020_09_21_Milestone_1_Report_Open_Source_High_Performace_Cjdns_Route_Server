Milestone 1
===========

Libraries
---------
Rust libraries included in milestone 1 are completed 

cjdnskeys - tools for working with cjdns keys
  https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-keys
    
cjdnsann - Library for parsing cjdns announcement messages
  https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-ann
    
cjdnsniff - Library for sniffing and injecting cjdns traffic
  https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-sniff
    
cjdnsadmin - Admin API connector for talking to cjdns engine
  https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-admin

cjdnsencode - Parser and serializer for cjdns encoding schemes
  part of https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-core

cjdnsctrl - tool for parsing/serializing CTRL messages
  https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-ctrl
    
cjdnshdr - Tools for parsing and serializing cjdns packet headers
  https://github.com/CJDNS-Development-Team/CJDNS/tree/master/cjdns-hdr
    
netchecksum - Library which implements the 1s complement checksum used by TCP, UDP and ICMP

Binaries
--------

Along with the above libaries there are also three binaries: cjdnsadmin, dumpdht, dumpctrl.

All these binaries require connection to a working cjdns router to allow to send control command and sniff traffic.

Examples:

$ cargo build --release

$ ./target/release/cjdnsadmin 'ping()'

$ ./target/release/dumpdht

$ ./target/release/dumpctrl
